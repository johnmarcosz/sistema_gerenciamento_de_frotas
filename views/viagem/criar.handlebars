<div class="container-xl px-4 h-100">    

    <form action="/viagem/criarPost" method="POST" class="h-100" >

        <div class="col-mb-3">
            <h4>Nova Viagem</h4>
        </div>

        <hr>

        <div class="form-row row">

            <div class="form-group col mb-3">
                <label for="origem" class="form-label">Origem</label>
                <input type="text" class="form-control" name="origem" placeholder="Origem da viagem">
            </div>

            <div class="form-group col mb-3">
                <label for="destino" class="form-label">Destino</label>
                <input type="text" class="form-control" name="destino" placeholder="Destino da viagem">
            </div>
    
        </div>

        <div class="form-row row">

            <div class="col mb-3">
                <label for="dataPartida" class="form-label">Data de partida</label>
                <input type="datetime-local" class="form-control" name="dataPartida">
            </div>

            <div class="col mb-3">
                <label for="dataRetorno" class="form-label">Data de retorno</label>
                <input type="datetime-local" class="form-control" name="dataRetorno">
            </div>

            <div class="col">

                <label for="valorTotal" class="form-label">Custo total</label>

                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">R$</div>
                    </div>
                
                    <input type="text" step="0.01" class="form-control" name="valorTotal" placeholder="Custo da viagem">
                </div>
                
            </div>
            
        </div>


        <label for="veiculo" class="form-label">Veículo</label>
        <div class="form-row d-flex row mx-auto">

            <div class="col" style="padding-left: 0;">

                <input type="text" class="form-control form-select" id="autocomplete_busca_veiculo" autocomplete="off" placeholder="Digite para buscar">
                <span id="resultado_busca_veiculo" class="w-100"></span>

            </div>

            <a href="#" id="botaoLimparItemVeiculo" class="btn btn-outline-secondary col-1 disabled" onclick="limparItem('VEICULO')" style="margin-right: 11px;"><i class="bi bi-trash3-fill"></i></a>
            <a href="#" id="botaoAdicionarItemVeiculo" class="btn btn-success col-1 disabled" onclick="botaoAdicionarItem()"><i class="bi bi-plus-circle"></i></a>

        </div>

        <label for="motorista" class="form-label pt-3">Motorista</label>
        <div class="form-row d-flex row mx-auto">

            <div class="col" style="padding-left: 0;">

                <input type="text" class="form-control form-select" id="autocomplete_busca_motorista" autocomplete="off" placeholder="Digite para buscar">
                <span id="resultado_busca_motorista" class="w-100"></span>

            </div>

            <a href="#" id="botaoLimparItemMotorista" class="btn btn-outline-secondary col-1 disabled" onclick="limparItem('MOTORISTA')" style="margin-right: 11px;"><i class="bi bi-trash3-fill"></i></a>
        </div>

        <center>

            <hr>

            <button type="submit" class="btn btn-success col-2"><i class="bi bi-check-circle-fill"></i>
                Salvar</button>
            <a href="/viagem" class="btn btn-danger col-2"><i class="bi bi-x-circle-fill"></i> Cancelar</a>
        </center>
        

    </form>
    


</div>

<script>

    // Variáveis Veículos
    input_busca_veiculo = document.getElementById("autocomplete_busca_veiculo")
    botao_adicionar_item_veiculo = document.getElementById("botaoAdicionarItemVeiculo")
    botao_limpar_item_veiculo = document.getElementById("botaoLimparItemVeiculo")
    itensAdicionadosVeiculos = []
    itensRetornadosVeiculos = ''
    itemSelecionadoVeiculo = ''
    ultimaBuscaVeiculo = ''

    // Variáveis Motoristas
    input_busca_motorista = document.getElementById("autocomplete_busca_motorista")
    botao_adicionar_item_motorista = document.getElementById("botaoAdicionarItemMotorista")
    botao_limpar_item_motorista = document.getElementById("botaoLimparItemMotorista")
    motoristaEscolhido = []
    itensRetornadosMotoristas = ''
    itemSelecionadoMotorista = ''
    ultimaBuscaMotorista = ''


    // ------------------ VEÍCULO ------------------

    // Realiza uma nova busca no banco a cada letra digitada 
    input_busca_veiculo.onkeyup = function () { 
        var query = input_busca_veiculo.value
        realizar_busca_veiculo(query)
    }


    // Busca dinâmica / autocomplete
    function realizar_busca_veiculo(query = '') {

        ultimaBuscaVeiculo = query

        // Se não foi digitado nada, não realizar a consulta
        if (query == "" || query == " ") {
            return
        }

        fetch(`/viagem/buscarVeiculo?texto_busca=${query}`).then(function (resposta) {
            return resposta.json()

        }).then(function (resultadoConsulta) {

            if (resultadoConsulta.length > 0) {

                itensRetornadosVeiculos = resultadoConsulta
                html = '<div class="position-relative" id="itens_resultado_veiculos"  style="z-index: 999;">' +
                    '<ul class="list-group position-absolute" style="left:0; right:0;">'

                for (var i = 0; i < itensRetornadosVeiculos.length; i++) {

                    // Serve para deixar destacado o texto pesquisado nos resultados retornados
                    var expressao_regular = new RegExp('(' + query + ')', 'gi')

                    html += `<a href="#" onclick="atualizarValorInput('VEICULO', ${itensRetornadosVeiculos[i].id})" class="list-group-item list-group-item-action">
                         ${itensRetornadosVeiculos[i].descricao.replace(expressao_regular, '<span class="text-primary fw-bold">$1</span>')} | Placa:
                         ${itensRetornadosVeiculos[i].placa.replace(expressao_regular, '<span class="text-primary fw-bold">$1</span>')}
                        </a>`
                }

                html += '</ul> </div>'
                document.getElementById("resultado_busca_veiculo").innerHTML = html
            } else {
                fecharResultados('VEICULO')
            }
        })
    }


    // Criando a lista de itens selecionados
    function adicionarItem(){

      html = `<ul id="itemAdicionado${itemSelecionadoVeiculo.id}" class="p-0 mx-0 mt-1 list-group-item rounded d-flex align-items-center justify-content-between list-group-item-light">
                ${itemSelecionadoVeiculo.descricao} | Placa: ${itemSelecionadoVeiculo.placa}
                <a class="btn btn-outline-danger ml-auto pr-0" onclick="removerItem(${itemSelecionadoVeiculo.id})">Remover</a>
              </ul>`

      document.getElementById("itens_selecionados").innerHTML += html
      input_busca_veiculo.value = ""
      // Adiciona item na lista de IDs que irá para o banco de dados
      itensAdicionadosVeiculos.push(itemSelecionadoVeiculo.id)
      itemSelecionadoVeiculo = ""
    }


    // Removendo itens selecionados
    function removerItem(idItem = ""){

        item = document.getElementById('itemAdicionado' + idItem)
        item.remove()
        // Remove item da lista de IDs que irá para o banco de dados
        itensAdicionadosVeiculos.splice( itensAdicionadosVeiculos.indexOf(idItem), 1)
    }


    // ------------------ MOTORISTA ------------------

    // Realiza uma nova busca no banco a cada letra digitada 
    input_busca_motorista.onkeyup = function () { 
        var query = input_busca_motorista.value
        realizar_busca_motorista(query)
    }

    // Busca dinâmica / autocomplete
    function realizar_busca_motorista(query = '') {

        ultimaBuscaMotorista = query

        // Se não foi digitado nada, não realizar a consulta
        if (query == "" || query == " ") {
            return
        }

        fetch(`/viagem/buscarMotorista?texto_busca=${query}`).then(function (resposta) {
            return resposta.json()

        }).then(function (resultadoConsulta) {

            if (resultadoConsulta.length > 0) {

                itensRetornadosMotoristas = resultadoConsulta
                html = '<div class="position-relative" id="itens_resultado_motoristas" style="z-index: 999;">' +
                    '<ul class="list-group position-absolute" style="left:0; right:0;">'

                for (var i = 0; i < itensRetornadosMotoristas.length; i++) {

                    // Serve para deixar destacado o texto pesquisado nos resultados retornados
                    var expressao_regular = new RegExp('(' + query + ')', 'gi')

                    html += `<a href="#" onclick="atualizarValorInput('MOTORISTA', ${itensRetornadosMotoristas[i].id})" class="list-group-item list-group-item-action">
                         ${itensRetornadosMotoristas[i].nome.replace(expressao_regular, '<span class="text-primary fw-bold">$1</span>')} | CPF:
                         ${itensRetornadosMotoristas[i].cpf.replace(expressao_regular, '<span class="text-primary fw-bold">$1</span>')}
                        </a>`
                }

                html += '</ul> </div>'
                document.getElementById("resultado_busca_motorista").innerHTML = html
            } else {
                fecharResultados('MOTORISTA')
            }
        })
    }


    // ------------------ FUNÇÕES DUPLAS ------------------

    // O parâmetro 'origem' sempre será 'VEICULO' ou 'MOTORISTA'

    // Quando uma opção for selecionada, atualiza o valor do input com a descrição da opção selecionada
    function atualizarValorInput(origem = "", idItemSelecionado = null) {

        if(origem == 'VEICULO'){
            itemSelecionadoVeiculo = itensRetornadosVeiculos.find(item => item.id == idItemSelecionado);
            input_busca_veiculo.value = itemSelecionadoVeiculo.descricao + " | Placa: " + itemSelecionadoVeiculo.placa
            botao_adicionar_item_veiculo.classList.remove("disabled");
            botao_limpar_item_veiculo.classList.remove("disabled");
            fecharResultados('VEICULO')

        } else if(origem == 'MOTORISTA'){
            itemSelecionadoMotorista = itensRetornadosMotoristas.find(item => item.id == idItemSelecionado);
            input_busca_motorista.value = itemSelecionadoMotorista.nome + " | CPF: " + itemSelecionadoMotorista.cpf
            botao_limpar_item_motorista.classList.remove("disabled");
            fecharResultados('MOTORISTA')
        }
        
    }
    const input_busca_motorista2 = document.querySelector('input[type="text"]');
    input_busca_motorista2.addEventListener('compositionend', (evento) => {
        alert(`generated characters were: ${evento.data}`);
    })

    // Quando clicar fora da listagem/resultados da busca, fechar a listagem de itens e manter o item selecionado
    window.onclick = function (evento) {

        // VEÍCULO
        // Se não tiver item selecionado ainda e foi clicado fora do input
        if (itemSelecionadoVeiculo == '' && evento.target.id != "autocomplete_busca_veiculo") {
            input_busca_veiculo.value = ""
            botao_adicionar_item_veiculo.classList.add("disabled");
            botao_limpar_item_veiculo.classList.add("disabled");
            fecharResultados('VEICULO')

        // Se tiver item selecionado e foi clicado fora do input
        } else if (itemSelecionadoVeiculo != '' && evento.target.id != "autocomplete_busca_veiculo") {
            input_busca_veiculo.value = itemSelecionadoVeiculo.descricao + " | Placa: " + itemSelecionadoVeiculo.placa
            fecharResultados('VEICULO')

        // Se tiver item selecionado e foi clicado dentro do input
        } else if (itemSelecionadoVeiculo != '' && evento.target.id == "autocomplete_busca_veiculo") {
            input_busca_veiculo.value = ultimaBuscaVeiculo
            realizar_busca_veiculo(ultimaBuscaVeiculo)
        }

        
        // MOTORISTA
        // Se não tiver item selecionado ainda e foi clicado fora do input
        if (itemSelecionadoMotorista == '' && evento.target.id != "autocomplete_busca_motorista") {
            input_busca_motorista.value = ""
            botao_limpar_item_motorista.classList.add("disabled");
            fecharResultados('MOTORISTA')
            return

        // Se tiver item selecionado e foi clicado fora do input
        } else if (itemSelecionadoMotorista != '' && evento.target.id != "autocomplete_busca_motorista") {
            input_busca_motorista.value = itemSelecionadoMotorista.nome + " | CPF: " + itemSelecionadoMotorista.cpf
            fecharResultados('MOTORISTA')
            return

        // Se tiver item selecionado e foi clicado dentro do input
        } else if (itemSelecionadoMotorista != '' && evento.target.id == "autocomplete_busca_motorista") {
            input_busca_motorista.value = ultimaBuscaMotorista
            realizar_busca_motorista(ultimaBuscaMotorista)
            return
        }
    }

    // Fechar os resultados da busca
    function fecharResultados(origem = "") {

        if(origem == 'VEICULO'){
            var itens_resultado_veiculos = document.getElementById("itens_resultado_veiculos")
            if (itens_resultado_veiculos) {
                itens_resultado_veiculos.remove()
            }
        
        } else if(origem == 'MOTORISTA'){
            var itens_resultado_motoristas = document.getElementById("itens_resultado_motoristas")
            if (itens_resultado_motoristas) {
                itens_resultado_motoristas.remove()
            }
        }
        
    }

    // Ao clicar no botão de lixeira, remove o item selecionado
    function limparItem(origem = ""){

        if(origem == 'VEICULO'){
            input_busca_veiculo.value = ""
            itemSelecionadoVeiculo = ""
            botao_limpar_item_veiculo.classList.add("disabled");
            fecharResultados('VEICULO')
        
        } else if(origem == 'MOTORISTA'){
            input_busca_motorista.value = ""
            itemSelecionadoMotorista = ""
            botao_limpar_item_motorista.classList.add("disabled");
            fecharResultados('MOTORISTA')
        }
    }    

</script>
